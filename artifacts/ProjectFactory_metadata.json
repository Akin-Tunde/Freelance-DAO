{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_governanceAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "projectContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "budget",
						"type": "uint256"
					}
				],
				"name": "ProjectCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_budget",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					}
				],
				"name": "createProject",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "deployedProjects",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDeployedProjects",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "governanceAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "setGovernanceAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "A factory contract responsible for creating and deploying new Project contracts. This pattern keeps the core logic consistent for all projects and allows the platform to track every project created in the ecosystem.",
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_governanceAddress": "The address of the main Governance contract."
					}
				},
				"createProject(string,string,uint256,address)": {
					"params": {
						"_budget": "The total budget for the project in the smallest unit of the token.",
						"_description": "A brief description of the project scope.",
						"_title": "The title of the project.",
						"_tokenAddress": "The address of the ERC20 token to be used for payment."
					},
					"returns": {
						"_0": "The address of the newly created Project contract."
					}
				}
			},
			"title": "ProjectFactory",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"createProject(string,string,uint256,address)": {
					"notice": "Deploys a new Project contract with the given parameters."
				},
				"getDeployedProjects()": {
					"notice": "Retrieves the list of all project addresses created by this factory."
				},
				"setGovernanceAddress(address)": {
					"notice": "Allows governance to update its own address if it ever needs to be migrated."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/core/ProjectFactory.sol": "ProjectFactory"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/core/Escrow.sol": {
			"keccak256": "0xedd7fddeb82b0508983d70b7351a5947ed44c095011d19e90862713f08d27fe4",
			"license": "MIT",
			"urls": [
				"bzz-raw://9f76c21afff1c3af497db1dc7c9d7699c85f42cda6c6f2f300dd871ef6f1ece5",
				"dweb:/ipfs/QmbnaNe1j3sMpdLmZkcsJthd3fsoVjqjajMyrofGcH2UBp"
			]
		},
		"contracts/core/Project.sol": {
			"keccak256": "0x088ad24d85d54de50aee0f9e175d1a919c009f2ebf07d38b2176da26bdf8879f",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b3873f21c0be71ae87dc363de77bebbf1eb1e0c093a29e76b711ca88b375d6b",
				"dweb:/ipfs/QmQD1TcdUnmKZbsLn1xgog1vMNzdm8J8JvG6dTDgApGr8U"
			]
		},
		"contracts/core/ProjectFactory.sol": {
			"keccak256": "0x124324157f84c9e3f4641a47b2188450c6cb3efa222c2cc2412620864f2fe97d",
			"license": "MIT",
			"urls": [
				"bzz-raw://9e3f824c871403e0161df40fdaae6521713ba6fcac192effe2fe6d35679855fa",
				"dweb:/ipfs/QmbB2YffaY7UUnnWXF58U2RCmBqbCP8mMogYuLA8eC6Fxn"
			]
		},
		"contracts/utils/Proposal.sol": {
			"keccak256": "0xb84062133a4bbb7c96292782cb42ed742b3eafe38b79306c4871f9eae2c7200e",
			"license": "MIT",
			"urls": [
				"bzz-raw://38ba9fb230852f710e820baa373a2f45eb1bb8dc4a7421d654d55da002bb5ebc",
				"dweb:/ipfs/Qmc5FQEcgEK1gEY52REJmBA4dc3ew31QXh7zFKPE6rjo7k"
			]
		}
	},
	"version": 1
}