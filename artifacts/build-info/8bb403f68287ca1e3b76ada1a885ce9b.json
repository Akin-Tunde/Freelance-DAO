{
	"id": "8bb403f68287ca1e3b76ada1a885ce9b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/interfaces/IUserIdentity.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title IUserIdentity\r\n * @dev Interface for the UserIdentity contract.\r\n * Defines the external functions that other contracts can call to interact with user profiles.\r\n */\r\ninterface IUserIdentity {\r\n    /**\r\n     * @notice A struct to hold all public information about a user.\r\n     */\r\n    struct UserProfile {\r\n        address userAddress;\r\n        string username;\r\n        string skills;\r\n        bytes ipfsPortfolioHash; // Link to off-chain data (e.g., portfolio JSON on IPFS)\r\n        uint256 reputationScore;\r\n        uint256 projectsCompleted;\r\n    }\r\n\r\n    /**\r\n     * @notice Updates the reputation score for a given user.\r\n     * @dev MUST only be callable by the authorized Reputation contract.\r\n     * @param _user The address of the user whose score is being updated.\r\n     * @param _newScore The user's newly calculated reputation score.\r\n     */\r\n    function updateReputation(address _user, uint256 _newScore) external;\r\n\r\n    /**\r\n     * @notice Increments the completed projects counter for a user.\r\n     * @dev MUST only be callable by an authorized contract (e.g., Project or Escrow).\r\n     * @param _user The address of the user who completed a project.\r\n     */\r\n    function incrementProjectsCompleted(address _user) external;\r\n    \r\n    /**\r\n     * @notice Fetches the profile for a given user address.\r\n     * @param _user The address of the user.\r\n     * @return UserProfile A struct containing the user's profile data.\r\n     */\r\n    function getProfile(address _user) external view returns (UserProfile memory);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IUserIdentity.sol": {
				"IUserIdentity": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getProfile",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "userAddress",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "username",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "skills",
											"type": "string"
										},
										{
											"internalType": "bytes",
											"name": "ipfsPortfolioHash",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "reputationScore",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "projectsCompleted",
											"type": "uint256"
										}
									],
									"internalType": "struct IUserIdentity.UserProfile",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "incrementProjectsCompleted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_newScore",
									"type": "uint256"
								}
							],
							"name": "updateReputation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the UserIdentity contract. Defines the external functions that other contracts can call to interact with user profiles.",
						"kind": "dev",
						"methods": {
							"getProfile(address)": {
								"params": {
									"_user": "The address of the user."
								},
								"returns": {
									"_0": "UserProfile A struct containing the user's profile data."
								}
							},
							"incrementProjectsCompleted(address)": {
								"details": "MUST only be callable by an authorized contract (e.g., Project or Escrow).",
								"params": {
									"_user": "The address of the user who completed a project."
								}
							},
							"updateReputation(address,uint256)": {
								"details": "MUST only be callable by the authorized Reputation contract.",
								"params": {
									"_newScore": "The user's newly calculated reputation score.",
									"_user": "The address of the user whose score is being updated."
								}
							}
						},
						"title": "IUserIdentity",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getProfile(address)": "0f53a470",
							"incrementProjectsCompleted(address)": "43f05743",
							"updateReputation(address,uint256)": "f5c91a08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skills\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"ipfsPortfolioHash\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"reputationScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectsCompleted\",\"type\":\"uint256\"}],\"internalType\":\"struct IUserIdentity.UserProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"incrementProjectsCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newScore\",\"type\":\"uint256\"}],\"name\":\"updateReputation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the UserIdentity contract. Defines the external functions that other contracts can call to interact with user profiles.\",\"kind\":\"dev\",\"methods\":{\"getProfile(address)\":{\"params\":{\"_user\":\"The address of the user.\"},\"returns\":{\"_0\":\"UserProfile A struct containing the user's profile data.\"}},\"incrementProjectsCompleted(address)\":{\"details\":\"MUST only be callable by an authorized contract (e.g., Project or Escrow).\",\"params\":{\"_user\":\"The address of the user who completed a project.\"}},\"updateReputation(address,uint256)\":{\"details\":\"MUST only be callable by the authorized Reputation contract.\",\"params\":{\"_newScore\":\"The user's newly calculated reputation score.\",\"_user\":\"The address of the user whose score is being updated.\"}}},\"title\":\"IUserIdentity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getProfile(address)\":{\"notice\":\"Fetches the profile for a given user address.\"},\"incrementProjectsCompleted(address)\":{\"notice\":\"Increments the completed projects counter for a user.\"},\"updateReputation(address,uint256)\":{\"notice\":\"Updates the reputation score for a given user.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUserIdentity.sol\":\"IUserIdentity\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUserIdentity.sol\":{\"keccak256\":\"0x557812a5b69c45863271065189ee59f7971d3319ae85cd405aaa4d10ce2584bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e031b5b5cbfcf6a17226193fb2d0dd7be9d68ce8a90b07b1caa5356e45618653\",\"dweb:/ipfs/QmYCKEMSbB8oLkv9KbHE5FVd33MNF3XDXUG7bkPj9RRCET\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getProfile(address)": {
								"notice": "Fetches the profile for a given user address."
							},
							"incrementProjectsCompleted(address)": {
								"notice": "Increments the completed projects counter for a user."
							},
							"updateReputation(address,uint256)": {
								"notice": "Updates the reputation score for a given user."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IUserIdentity.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUserIdentity.sol",
					"exportedSymbols": {
						"IUserIdentity": [
							40
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUserIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:180:0",
								"text": " @title IUserIdentity\n @dev Interface for the UserIdentity contract.\n Defines the external functions that other contracts can call to interact with user profiles."
							},
							"fullyImplemented": false,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "IUserIdentity",
							"nameLocation": "253:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IUserIdentity.UserProfile",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "274:82:0",
										"text": " @notice A struct to hold all public information about a user."
									},
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "userAddress",
											"nameLocation": "400:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "392:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "392:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "username",
											"nameLocation": "429:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "422:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 6,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "422:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "skills",
											"nameLocation": "455:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "448:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 8,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "448:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "ipfsPortfolioHash",
											"nameLocation": "478:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "472:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 10,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "472:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "reputationScore",
											"nameLocation": "571:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "563:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "563:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "projectsCompleted",
											"nameLocation": "605:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "597:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "597:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserProfile",
									"nameLocation": "369:11:0",
									"nodeType": "StructDefinition",
									"scope": 40,
									"src": "362:268:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "638:295:0",
										"text": " @notice Updates the reputation score for a given user.\n @dev MUST only be callable by the authorized Reputation contract.\n @param _user The address of the user whose score is being updated.\n @param _newScore The user's newly calculated reputation score."
									},
									"functionSelector": "f5c91a08",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateReputation",
									"nameLocation": "948:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "973:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "965:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "_newScore",
												"nameLocation": "988:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "980:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:34:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:0"
									},
									"scope": 40,
									"src": "939:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1016:240:0",
										"text": " @notice Increments the completed projects counter for a user.\n @dev MUST only be callable by an authorized contract (e.g., Project or Escrow).\n @param _user The address of the user who completed a project."
									},
									"functionSelector": "43f05743",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "incrementProjectsCompleted",
									"nameLocation": "1271:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1306:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1298:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:0:0"
									},
									"scope": 40,
									"src": "1262:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1334:193:0",
										"text": " @notice Fetches the profile for a given user address.\n @param _user The address of the user.\n @return UserProfile A struct containing the user's profile data."
									},
									"functionSelector": "0f53a470",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfile",
									"nameLocation": "1542:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1561:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1553:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:15:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1591:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserProfile_$16_memory_ptr",
													"typeString": "struct IUserIdentity.UserProfile"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "UserProfile",
														"nameLocations": [
															"1591:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 16,
														"src": "1591:11:0"
													},
													"referencedDeclaration": 16,
													"src": "1591:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserProfile_$16_storage_ptr",
														"typeString": "struct IUserIdentity.UserProfile"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:20:0"
									},
									"scope": 40,
									"src": "1533:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 41,
							"src": "243:1371:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1581:0"
				},
				"id": 0
			}
		}
	}
}